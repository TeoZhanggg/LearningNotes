设计模式笔记

设计模式诙谐讲解：https://blog.csdn.net/ShuSheng0007/article/details/115980889

1. 策略模式
    参考文章：https://zhuanlan.zhihu.com/p/346434992
    
    简单地说，策略模式就是将行为策略与个体分离开来。个体的行为可能千变万化，如果根据继承模式来处理的话，我们不可能对每种行为的对象都实现一个子类。这种情况下，我们可以使用策略模式，将行为与个体分离，将行为抽象成一个对象，只需要个体包含该行为对象的类型，每次需要变更行为时，更换个体中的行为对象即可。
    
    优点：
    1. 对“开闭原则”完美支持，可以在不修改原有代码的基础上，灵活地为对象修改具体行为
    2. 可以避免大量if-else使用

    缺点：
    1. 每增加一种行为策略就要增加一个类，策略过多时类数量庞杂
    2. 调用者必须知道所有策略类，并了解这个策略类具体行为
    
    应用：
    Arrays.sort(Object[] a)方法中有这种模式的使用。

2. 装饰器模式
    参考文章：https://blog.csdn.net/ShuSheng0007/article/details/88780036
    
    装饰器模式就是用一个新的对象将原有对象包裹起来（新对象包含原有对象），然后通过调用新对象的方法来替代原方法。新方法中除了调用原方法外，还可以加入新的动作，来达到装饰的效果。
    
    优点：
    1. 不需要修改原代码，就可以对原有功能做拓展。符合开闭原则
    
    缺点：
    1. 同样，类的个数会增加
